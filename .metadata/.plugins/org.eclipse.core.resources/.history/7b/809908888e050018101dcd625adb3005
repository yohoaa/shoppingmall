package com.lkoproject.memberdao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.util.ArrayList;

import javax.sql.DataSource;
import javax.naming.Context;
import javax.naming.InitialContext;

import com.lkoproject.memberdto.ProductDTO;

public class ProductDAO {

	DataSource datasource;
	
	public ProductDAO() {
		try {
			Context context = new InitialContext();
			datasource = (DataSource)context.lookup("java:comp/env/jdbc/Oracle11g");
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public ArrayList<ProductDTO> list(String main_cate) {
		
		System.out.println("리스트()");
		
		ArrayList<ProductDTO> dtos = new ArrayList<ProductDTO>(); 
		
		Connection con = null;
		PreparedStatement pstmt= null;
		ResultSet rs= null;
		try {
			con = datasource.getConnection();
			
			String query = "SELECT ii.item_no, ii.title, ii.price, ii.content, im.main_image, "
					+ "FROM item_info ii,item_image im,item_amount ia WHERE ii.item_no=im.item_no AND "
					+ "ii.item_no=ia.item_no AND ii.main_cate=?";
			pstmt = con.prepareStatement(query);
			pstmt.setString(1, main_cate);
			rs = pstmt.executeQuery();
			System.out.println(rs.next());
			while(rs.next()) {
				
				ProductDTO dto = new ProductDTO();
				
				dto.setItemNo(rs.getInt("item_no"));
				dto.setTitle(rs.getString("title"));
				dto.setPrice(rs.getString("price")); 
				dto.setMainImage(rs.getString("main_image"));
				/*ProductDTO dto = new ProductDTO(itemNo,title,mainCate,subCate,itemCode,price,content,itemGroup,upload,mainImage,image1,image2,
						image3,contentImage,s,m,l,xl)*/;
				
				System.out.println(dto);
				dtos.add(dto);
			
			}
			System.out.println("추가완료");
			
		}catch(Exception e) {
			e.printStackTrace();
		}finally {try {if(rs!=null)rs.close();if(pstmt!=null)pstmt.close();if(con!=null)con.close();}catch(Exception e) {e.printStackTrace();}}
		
		return dtos;
	}
	
	public ArrayList<ProductDTO> list(String main_cate, String sub_cate) {
		
		System.out.println("리스트()");
		
		ArrayList<ProductDTO> dtos = new ArrayList<ProductDTO>(); 
		
		Connection con = null;
		PreparedStatement pstmt= null;
		ResultSet rs= null;
		try {
			con = datasource.getConnection();
			String query = "SELECT ii.item_no, ii.title, ii.price, ii.content, im.main_image, "
					+ "FROM item_info ii,item_image im,item_amount ia WHERE ii.item_no=im.item_no AND "
					+ "ii.item_no=ia.item_no AND ii.main_cate=? AND ii.sub_cate=?";
			pstmt = con.prepareStatement(query);
			pstmt.setString(1, main_cate);
			pstmt.setString(2, sub_cate);
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				
				ProductDTO dto = new ProductDTO();
				
				dto.setItemNo(rs.getInt("item_no"));
				dto.setTitle(rs.getString("title"));
				dto.setPrice(rs.getString("price")); 
				dto.setMainImage(rs.getString("main_image"));
				/*ProductDTO dto = new ProductDTO(itemNo,title,mainCate,subCate,itemCode,price,content,itemGroup,upload,mainImage,image1,image2,
						image3,contentImage,s,m,l,xl)*/;
				
				System.out.println(dto);
				dtos.add(dto);
			
			}
			System.out.println("추가완료");
			
		}catch(Exception e) {
			e.printStackTrace();
		}finally {try {if(rs!=null)rs.close();if(pstmt!=null)pstmt.close();if(con!=null)con.close();}catch(Exception e) {e.printStackTrace();}}
		
		return dtos;
	}
	
	public int upload(String mainImage,String image1,String image2,String image3,String itemTitle,
			String mainCate,String subCate,String itemCode,String price,String content,String s,String m,String l,String xl,String contentImage){
		
		System.out.println("업로드()");
		
		Connection con = null;
		PreparedStatement pstmt= null;
		int result =0;
		try {
			
			con = datasource.getConnection();
			
			String query = "INSERT INTO item_info VALUES(seq.nextval,?,?,?,?,?,?,0,seq.currval,SYSDATE)";
			pstmt = con.prepareStatement(query);
			pstmt.setString(1,itemTitle);
			pstmt.setString(2,mainCate);
			pstmt.setString(3,subCate);
			pstmt.setString(4,itemCode);
			pstmt.setString(5,price);
			pstmt.setString(6,content);
			int i = pstmt.executeUpdate();
			if(i == 1) {
				System.out.println("아이템 정보 입력완료");
			}
			
			String atQuery = "INSERT INTO item_amount VALUES(seq.currval,?,?,?,?)";
			pstmt = con.prepareStatement(atQuery);
			pstmt.setString(1,s);
			pstmt.setString(2,m);
			pstmt.setString(3,l);
			pstmt.setString(4,xl);
			int j = pstmt.executeUpdate();
			if(i == 1) {
				System.out.println("아이템 사이즈별 수량 입력완료");
			}
			
			String imQuery = "INSERT INTO item_image VALUES(seq.currval,?,?,?,?,?)";
			pstmt = con.prepareStatement(imQuery);
			pstmt.setString(1,mainImage);
			pstmt.setString(2,image1);
			pstmt.setString(3,image2);
			pstmt.setString(4,image3);
			pstmt.setString(5,contentImage);
			int k = pstmt.executeUpdate();
			if(i == 1) {
				System.out.println("아이템 이미지 입력완료");
			}
			
			if(i+j+k != 3) {
				System.out.println("오류가 발생하였습니다.");
				result = -1;
			}else {
				result = 1;
			}
			
		}catch(Exception e) {
			e.printStackTrace();
		}finally {try {if(pstmt!=null)pstmt.close();if(con!=null)con.close();}catch(Exception e) {e.printStackTrace();}}
		
		return result;
	}
	
	public void productView(String strNo) {
		Connection con = null;
		PreparedStatement pstmt= null;
		ResultSet rs= null;
		try {
			con = datasource.getConnection();
			
			String query = "SELECT ii.item_no, ii.title, ii.main_cate, ii.sub_cate, ii.item_code, ii.price, ii.content, "
					+ "ii.item_group, ii.upload, im.main_image, im.image1, im.image2, im.image3, im.content_image, ia.s, "
					+ "ia.m, ia.l, ia.xl FROM item_info ii,item_image im,item_amount ia WHERE ii.item_no=im.item_no AND "
					+ "ii.item_no=ia.item_no AND ii.item_no=?";
			pstmt = con.prepareStatement(query);
			pstmt.setInt(1,Integer.parseInt(strNo));
			rs = pstmt.executeQuery();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
		
}
